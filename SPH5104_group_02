---
title: "Healthcare Analytics"
author: "Healthcare Analytics Group 2"
date: "April 9, 2019"
output: html_document
---
Authors:
Erna Gondo Santoso
Koh Juan Zhen
Kok Zhi Wei
Rowena Yap Kah Sin

#############################
### Database Query
#############################

```{r}
# drv <- dbDriver("PostgreSQL")
# con <- dbConnect(drv,
#                  dbname = "mimic"
#                  ,
#                  host = "172.16.201.249"
#                  ,
#                  user = "sph5104"
#                  ,
#                  password = "")
# 
# 
# query_base_covariates <- "WITH Sepsis_patients as (
# SELECT distinct a.subject_id, a.hadm_id from public.angus_sepsis a 
# INNER JOIN mimiciii.diagnoses_icd d on a.hadm_id = d.hadm_id 
# WHERE a.hadm_id is not null and a.angus = 1 order by a.subject_id, a.hadm_id),
# 
# Death_icu as (
# SELECT * FROM (
# SELECT p.subject_id,icu.hadm_id,icu.icustay_id,p.dod_hosp,p.gender,icu.los,icu.intime,icu.outtime,
# EXTRACT(YEAR from (age(icu.intime,p.dob))) as age
# FROM patients p 
# INNER JOIN icustays icu on p.subject_id = icu.subject_id 
# WHERE icu.icustay_id is not null order by p.subject_id,icu.hadm_id,icu.icustay_id) Death
# WHERE Death.age >= 18),
# 
# Insulin_treatment as (
# SELECT * FROM (
# SELECT *,
# rank() OVER (PARTITION BY subject_id ORDER BY row_id) AS insulin_treatment_number
# FROM prescriptions 
# WHERE lower(drug) like '%insulin%' and icustay_id is not null 
# ORDER BY subject_id, row_id) full_insulin
# WHERE full_insulin.insulin_treatment_number = 1),
# 
# Body_mass as (
# SELECT icu.subject_id,icu.hadm_id,icu.icustay_id, case
# WHEN hw.weight_first is not null and hw.height_first is not null then (hw.weight_first / ((hw.height_first/100)*(hw.height_first/100)))
# else null
# end as BMI,hw.height_first as height,hw.weight_first as weight
# FROM icustays icu 
# INNER JOIN public.heightweight hw on icu.icustay_id = hw.icustay_id 
# ORDER BY icu.subject_id),
# 
# sofa as (
# SELECT sofa,subject_id,hadm_id,icustay_id 
# FROM public.sofa),
# 
# sap as (
# SELECT subject_id,hadm_id,icustay_id,saps,wbc_score,glucose_score 
# FROM public.saps),
# 
# elix as (
# SELECT subject_id,hadm_id,congestive_heart_failure,cardiac_arrhythmias,valvular_disease,
# pulmonary_circulation,peripheral_vascular,hypertension,chronic_pulmonary,diabetes_uncomplicated,
# diabetes_complicated,renal_failure,liver_disease,coagulopathy,obesity 
# FROM public.elixhauser_ahrq)
# 
# SELECT base.*, BMI.weight,BMI.BMI,sf.sofa, sa.saps,sa.wbc_score,sa.glucose_score,el.congestive_heart_failure,el.cardiac_arrhythmias,el.valvular_disease,el.pulmonary_circulation,el.peripheral_vascular,el.hypertension,el.chronic_pulmonary,el.diabetes_uncomplicated,el.diabetes_complicated,el.renal_failure,el.liver_disease,el.coagulopathy,el.obesity
# FROM (SELECT SP.subject_id, SP.hadm_id, DI.icustay_id, DI.age,DI.gender,DI.intime,DI.outtime, DI.dod_hosp, DI.los
# FROM Sepsis_patients SP 
# INNER JOIN Death_icu DI on SP.subject_id = DI.subject_id and SP.hadm_id = DI.hadm_id
# INNER JOIN Insulin_treatment IT on SP.subject_id = IT.subject_id and SP.hadm_id = IT.hadm_id and DI.icustay_id = IT.icustay_id) base
# LEFT JOIN Body_mass BMI on base.subject_id = BMI.subject_id and base.hadm_id = BMI.hadm_id and base.icustay_id = BMI.icustay_id
# LEFT JOIN sofa sf on base.subject_id = sf.subject_id and base.hadm_id = sf.hadm_id and base.icustay_id = sf.icustay_id
# LEFT JOIN sap sa on base.subject_id = sa.subject_id and base.hadm_id = sa.hadm_id and base.icustay_id = sa.icustay_id
# LEFT JOIN elix el on base.subject_id = el.subject_id and base.hadm_id = el.hadm_id
# ;"
# 
# query_lab_glu <- "WITH Sepsis_patients as (
# SELECT distinct a.subject_id, a.hadm_id from public.angus_sepsis a 
# INNER JOIN mimiciii.diagnoses_icd d on a.hadm_id = d.hadm_id 
# WHERE a.hadm_id is not null and a.angus = 1 order by a.subject_id, a.hadm_id),
# 
# Insulin_treatment as (
# SELECT * FROM (
# SELECT *,
# rank() OVER (PARTITION BY subject_id ORDER BY row_id) AS insulin_treatment_number
# FROM prescriptions 
# WHERE lower(drug) like '%insulin%' and icustay_id is not null 
# ORDER BY subject_id, row_id) full_insulin
# WHERE full_insulin.insulin_treatment_number = 1),
# 
# Death_icu as (
# SELECT * FROM (
# SELECT p.subject_id,icu.hadm_id,icu.icustay_id,p.dod_hosp,p.gender,icu.los,icu.intime,icu.outtime,
# EXTRACT(YEAR from (age(icu.intime,p.dob))) as age
# FROM patients p 
# INNER JOIN icustays icu on p.subject_id = icu.subject_id 
# WHERE icu.icustay_id is not null order by p.subject_id,icu.hadm_id,icu.icustay_id) Death
# WHERE Death.age >= 18),
# 
# lab as (
# SELECT le.subject_id, le.hadm_id,le.itemid, glu_lab.label,le.charttime,le.valuenum
# FROM labevents le 
# INNER JOIN (select lab.itemid, lab.label from d_labitems lab where lab.itemid in ('50809','50931','51529')) as glu_lab on le.itemid = glu_lab.itemid),
# 
# chart as (
# SELECT ch.subject_id,ch.hadm_id,ch.icustay_id,ch.itemid, glu_chart.label,ch.charttime,ch.valuenum
# FROM chartevents ch 
# INNER JOIN (select d.itemid, d.label from d_items d where d.itemid in ('225664','807','811','1529','220621','226537','3744')) as glu_chart on ch.itemid = glu_chart.itemid)
# 
# SELECT base.*, le.itemid,le.label,le.charttime,le.valuenum 
# FROM (SELECT SP.subject_id, SP.hadm_id, DI.icustay_id, DI.age,DI.gender,DI.intime,DI.outtime, DI.dod_hosp, DI.los
# FROM Sepsis_patients SP 
# INNER JOIN Death_icu DI on SP.subject_id = DI.subject_id and SP.hadm_id = DI.hadm_id
# INNER JOIN Insulin_treatment IT on SP.subject_id = IT.subject_id and SP.hadm_id = IT.hadm_id and DI.icustay_id = IT.icustay_id) base
# LEFT JOIN lab le on base.subject_id = le.subject_id and base.hadm_id = le.hadm_id
# ;"
# 
# query_chart_glu <- "WITH Sepsis_patients as (
# SELECT distinct a.subject_id, a.hadm_id from public.angus_sepsis a 
# INNER JOIN mimiciii.diagnoses_icd d on a.hadm_id = d.hadm_id 
# WHERE a.hadm_id is not null and a.angus = 1 order by a.subject_id, a.hadm_id),
# 
# Insulin_treatment as (
# SELECT * FROM (
# SELECT *,
# rank() OVER (PARTITION BY subject_id ORDER BY row_id) AS insulin_treatment_number
# FROM prescriptions 
# WHERE lower(drug) like '%insulin%' and icustay_id is not null 
# ORDER BY subject_id, row_id) full_insulin
# WHERE full_insulin.insulin_treatment_number = 1),
# 
# Death_icu as (
# SELECT * FROM (
# SELECT p.subject_id,icu.hadm_id,icu.icustay_id,p.dod_hosp,p.gender,icu.los,icu.intime,icu.outtime,
# EXTRACT(YEAR from (age(icu.intime,p.dob))) as age
# FROM patients p 
# INNER JOIN icustays icu on p.subject_id = icu.subject_id 
# WHERE icu.icustay_id is not null order by p.subject_id,icu.hadm_id,icu.icustay_id) Death
# WHERE Death.age >= 18),
# 
# lab as (
# SELECT le.subject_id, le.hadm_id,le.itemid, glu_lab.label,le.charttime,le.valuenum
# FROM labevents le 
# INNER JOIN (select lab.itemid, lab.label from d_labitems lab where lab.itemid in ('50809','50931','51529')) as glu_lab on le.itemid = glu_lab.itemid),
# 
# chart as (
# SELECT ch.subject_id,ch.hadm_id,ch.icustay_id,ch.itemid, glu_chart.label,ch.charttime,ch.valuenum
# FROM chartevents ch 
# INNER JOIN (select d.itemid, d.label from d_items d where d.itemid in ('225664','807','811','1529','220621','226537','3744')) as glu_chart on ch.itemid = glu_chart.itemid)
# 
# SELECT base.*, ch.itemid,ch.label,ch.charttime,ch.valuenum 
# FROM (SELECT SP.subject_id, SP.hadm_id, DI.icustay_id, DI.age,DI.gender,DI.intime,DI.outtime, DI.dod_hosp, DI.los
# FROM Sepsis_patients SP 
# INNER JOIN Death_icu DI on SP.subject_id = DI.subject_id and SP.hadm_id = DI.hadm_id
# INNER JOIN Insulin_treatment IT on SP.subject_id = IT.subject_id and SP.hadm_id = IT.hadm_id and DI.icustay_id = IT.icustay_id) base
# LEFT JOIN chart ch on base.subject_id = ch.subject_id and base.hadm_id = ch.hadm_id and base.icustay_id = ch.icustay_id
# ;"
# 
# base <- dbGetQuery(con, query_base_covariates)
# base_lab_glu <- dbGetQuery(con, query_lab_glu)
# base_chart_glu <- dbGetQuery(con, query_chart_glu)
# 
# write.csv(base, "base_case_10apr19.csv", row.names=FALSE)
# write.csv(base_lab_glu, "base_case_labevents_10apr19.csv", row.names=FALSE)
# write.csv(base_chart_glu, "base_case_chartevents_10apr19.csv", row.names=FALSE)
```


#### Load Base CSV files
```{r message=FALSE, warning=FALSE, paged.print=TRUE}
library(tidyverse)
base <- read.csv("base_case_10apr19.csv", stringsAsFactors = FALSE)
base_lab_glu <- read.csv("base_case_labevents_10apr19.csv", stringsAsFactors = FALSE)
base_chart_glu <- read.csv("base_case_chartevents_10apr19.csv", stringsAsFactors = FALSE)
```

#### Mortality rate - to estimate sample size
```{r}
mortality_count <- base %>% filter(., dod_hosp < outtime & intime < dod_hosp) %>% distinct(subject_id)
population_count <- unique(base$subject_id)
mortality_rate <- (nrow(mortality_count) / length(population_count)) * 100
paste("Mortality rate for Septic patients aged 18 and above who received insulin in the ICU stay for the first time: ", 
      trimws(format(round(mortality_rate, 2), nsmall = 2)), "%", sep ="")
```

#### Replace the age >89 with median age == 91.4
```{r}
base <- base %>% mutate(age = ifelse(age > 89, 91.4, age))
```

#### Joining Chart and Lab data by subject_id & filtering during ICU stay
```{r}
lab_chart_combined <- rbind(base_lab_glu,base_chart_glu)

### Diabetic hyperosmolar syndrome : BG restricted within 15 & 600 to filter out errorneous BG lab values that is physiologically impossible
### Remove duplicated monitoring result
lab_chart_combined <- lab_chart_combined %>% 
  filter(charttime >= intime & charttime <=outtime) %>% 
  filter(valuenum > 15 & valuenum <= 600) %>%
  distinct(subject_id, hadm_id, icustay_id, charttime, valuenum, .keep_all = TRUE)
```

#### Grouping by NICE clinical target (Control group: 4 - 7 mmol/L or 72 - 126 mg/dL; Treatment group >126 - <=200)
```{r}
lab_chart_combined$charttime <- as.Date(lab_chart_combined$charttime)
base_full_glu <- lab_chart_combined %>% 
  group_by(subject_id, hadm_id, icustay_id) %>%
  summarise(gl_less_than_72 = sum(valuenum<72, na.rm = TRUE),
            gl_72_to_126 = sum(valuenum>=72 & valuenum<=126, na.rm = TRUE),
            gl_126_to_200 = sum(valuenum>126 & valuenum<=200, na.rm = TRUE),
            gl_more_than_200 = sum(valuenum>200, na.rm = TRUE),
            gl_readings_total = sum(gl_less_than_72, gl_72_to_126, gl_126_to_200, gl_more_than_200),
            gl_less_than_72_perct = (gl_less_than_72/gl_readings_total)*100,
            gl_72_to_126_perct = (gl_72_to_126/gl_readings_total)*100,
            gl_126_to_200_perct = (gl_126_to_200/gl_readings_total)*100,
            gl_more_than_200 = (gl_more_than_200/gl_readings_total)*100,
            considered_treatment = ifelse(gl_72_to_126_perct>=70, 1, 0),
            considered_control = ifelse(gl_126_to_200_perct>=70, 1, 0)) %>%
  filter(gl_readings_total>=3)
```

#####################################
### Construct Dataset for Analysis
#####################################

```{r}
### Remove LOS < 1 day
base_filtered <- base_full_glu %>% 
  inner_join(base, by = c("subject_id", "hadm_id", "icustay_id")) %>%
  filter(los>=1)

### Select LOS within 95% credible interval & create dummy
los_outlier_values <- as.matrix(boxplot.stats(base_filtered$los, coef = 1.5)$out)
base_filtered <- base_filtered %>% 
  filter(los<min(los_outlier_values)) %>%
  mutate(mortality_ICU = ifelse(dod_hosp >= intime & dod_hosp <=outtime, 1, 0),
         mortality_ICU = ifelse(is.na(mortality_ICU), 0 , mortality_ICU),
         diabetes = ifelse(diabetes_uncomplicated == 1, 1, ifelse(diabetes_complicated == 1, 1, 0)),
         treatment_control = ifelse(considered_treatment==1, 1, ifelse(considered_control==1, 0, NA))) %>%
  filter(!is.na(treatment_control))

### Chanage catergorical variables to Factor
categorical <- c("considered_treatment", "considered_control", "gender", "congestive_heart_failure",
                 "cardiac_arrhythmias", "valvular_disease", "pulmonary_circulation", "peripheral_vascular",
                 "hypertension", "chronic_pulmonary", "diabetes_uncomplicated", "diabetes_complicated", "renal_failure",
                 "liver_disease", "coagulopathy", "obesity", "mortality_ICU", "treatment_control", "diabetes")
base_filtered[categorical] <- lapply(base_filtered[categorical], factor)

base_final <- base_filtered %>% 
  dplyr::select(., c("subject_id", "hadm_id", "icustay_id", "age", "gender", "gl_readings_total", "sofa", "saps", "wbc_score",
                     "congestive_heart_failure", "cardiac_arrhythmias", "valvular_disease", "pulmonary_circulation", 
                     "peripheral_vascular", "hypertension", "chronic_pulmonary", "renal_failure", "liver_disease", "coagulopathy", 
                     "obesity", "treatment_control", "diabetes", "mortality_ICU", "los")) %>%
  na.omit()

rm(base, base_chart_glu, base_filtered, base_full_glu, base_lab_glu, lab_chart_combined, los_outlier_values, mortality_count, population_count)
```

#### Statistical Analysis (Normality test)
```{r}
base_variables <- base_final %>%
  ungroup() %>%
  dplyr::select(-c("subject_id", "hadm_id", "icustay_id", "mortality_ICU", "los"))

for(i in seq(dim(base_variables)[2])) {
  print(shapiro.test(as.numeric(base_variables[[i]])))
  }
```

##############################################
### Descriptive Statistics on Original Cohort
##############################################

#### Main Analysis
```{r}
library(tableone)
listVars_total <- c("age", "gender", "sofa", "saps", "wbc_score",  "congestive_heart_failure", "cardiac_arrhythmias", 
                    "valvular_disease", "pulmonary_circulation", "peripheral_vascular", "hypertension", "chronic_pulmonary",
                    "renal_failure", "liver_disease", "coagulopathy", "obesity", "diabetes")

conVars_total <- c("age", "sofa", "saps", "wbc_score")

catVars_total <- c("gender", "congestive_heart_failure", "cardiac_arrhythmias", "valvular_disease", "pulmonary_circulation",
                   "peripheral_vascular", "hypertension", "chronic_pulmonary", "renal_failure", "liver_disease", "coagulopathy",
                   "obesity", "diabetes")
# Stratfied by treatment 
table1_strata <- CreateTableOne(vars = listVars_total, strata = "treatment_control", data = base_final, factorVars = catVars_total)
print(table1_strata, nonnormal = conVars_total, showAllLevels = TRUE, quote = TRUE, noSpaces = TRUE)
```

#### Sub-group Analysis (Diabetic)
```{r}
base_diabetes <- base_final %>% filter(diabetes == 1)

table1_diabetes <- CreateTableOne(vars = listVars_total[-17], strata = "treatment_control", data = base_diabetes, factorVars = catVars_total[-13])
print(table1_diabetes, nonnormal = conVars_total, showAllLevels = TRUE, quote = TRUE, noSpaces = TRUE)
```

#### Sub-group Analysis (Non-Diabetic)
```{r}
base_non_diabetes <- base_final %>% filter(diabetes == 0)

table1_non_diabetes <- CreateTableOne(vars = listVars_total[-17], strata = "treatment_control", data = base_non_diabetes, factorVars = catVars_total[-13])
print(table1_non_diabetes, nonnormal = conVars_total, showAllLevels = TRUE, quote = TRUE, noSpaces = TRUE)
```

###############################################
### Propensity Score Matching on Matched Cohort
###############################################

#### Main Analysis
```{r}
set.seed(123)
Match_data <- base_final
write.csv(Match_data,"Match_data.csv",row.names = FALSE)

library(MatchIt)
Match_data <- read.csv("Match_data.csv")
m.out <- matchit(treatment_control ~ age + sofa + congestive_heart_failure + diabetes, data = Match_data, 
                 method = "nearest", ratio = 1, replace = FALSE, 
                 exact = c("age", "sofa", "congestive_heart_failure", "diabetes"), distance = "mahalanobis")
Match_output <- match.data(m.out, distance = "pscore")

### table 1 for matched cohort
table1_matched <- CreateTableOne(vars = listVars_total, strata = "treatment_control", data = Match_output, factorVars = catVars_total)
print(table1_matched, nonnormal=conVars_total, showAllLevels = TRUE, quote = TRUE, noSpaces = TRUE)

### Data frame for matched data
match_df <- as.data.frame(m.out$match.matrix)
match_df <- match_df %>% rownames_to_column(., var = "treat") %>% na.omit()
colnames(match_df) <- c("treat", "con")

### Control data frame
match_df_con <- Match_output %>% rownames_to_column(., var = "con")
match_df_con1 <- as.data.frame(match_df$con)
colnames(match_df_con1) <- "con"
match_df_con <- left_join(match_df_con1, match_df_con, by = "con")

### Treatment data frame
match_df_treat <- Match_output %>% rownames_to_column(., var = "treat")
match_df_treat1 <- as.data.frame(match_df$treat)
colnames(match_df_treat1) <- "treat"
match_df_treat <- left_join(match_df_treat1, match_df_treat, by = "treat")

match_df_con$mortality_ICU <- as.factor(match_df_con$mortality_ICU)
match_df_treat$mortality_ICU <- as.factor(match_df_treat$mortality_ICU)

rm(match_df_con1, match_df_treat1, base_variables, m.out, Match_data)

### McNemar test on Mortality 
library(exact2x2)
mcnemar.exact(match_df_con$mortality_ICU, match_df_treat$mortality_ICU)

### Paired t.test on LOS
t.test(match_df_treat$los, match_df_con$los, paired = TRUE)
table(match_df_treat$mortality_ICU) #treatment group
table(match_df_con$mortality_ICU) # control group
# mortality rates for treatment group = 15/(15+204) * 100 = 6.85% 
# mortality rates for control group = 28/(28+191) * 100 = 12.79%

```

#### Sub-group Analysis (Diabetic & Non-Diabetic)
```{r}
### Diabetic: Table 1 for matched cohort

base_diabetes_matched <- Match_output %>% filter(diabetes == 1)

table1_diabetes_matched <- CreateTableOne(vars = listVars_total[-17], strata = "treatment_control", data = base_diabetes_matched, factorVars = catVars_total[-13])
print(table1_diabetes_matched, nonnormal = conVars_total, showAllLevels = TRUE, quote = TRUE, noSpaces = TRUE)

### Diabetic: McNemar test on Mortality and Paired t.test on LOS
mcnemar.exact(match_df_con[match_df_con$diabetes == 1, ]$mortality_ICU, match_df_treat[match_df_treat$diabetes == 1, ]$mortality_ICU)

t.test(match_df_treat[match_df_treat$diabetes == 1, ]$los,match_df_con[match_df_con$diabetes == 1, ]$los, paired = TRUE)


### Non-Diabetic: Table 1 for matched cohort

base_nondiabetes_matched <- Match_output %>% filter(diabetes == 0)

table1_nondiabetes_matched <- CreateTableOne(vars = listVars_total, strata = "treatment_control", data = base_nondiabetes_matched, factorVars = catVars_total)
print(table1_nondiabetes_matched, nonnormal = conVars_total, showAllLevels = TRUE, quote = TRUE, noSpaces = TRUE)

### Non-Diabetic: McNemar test on Mortality and Paired t.test on LOS
mcnemar.exact(match_df_con[match_df_con$diabetes == 0, ]$mortality_ICU, match_df_treat[match_df_treat$diabetes == 0, ]$mortality_ICU)

t.test(match_df_treat[match_df_treat$diabetes == 0, ]$los, match_df_con[match_df_con$diabetes == 0, ]$los, paired = TRUE)

rm(match_df_con, match_df_treat)
```

####################################################
### Logistic / Linear Regression on Original Cohort
####################################################

#### Main Analysis - Primary Outcome (Mortality)
```{r}
main_mortality <- glm(mortality_ICU ~ treatment_control + age + sofa + congestive_heart_failure + diabetes, 
                      data = base_final, family  =binomial(link='logit'))
summary(main_mortality)
tableone::ShowRegTable(main_mortality, exp = TRUE, quote = TRUE)
```

#### Main Analysis - Secondary Outcome (LOS)
```{r}
main_los <- glm(los ~ treatment_control + age + sofa + congestive_heart_failure + diabetes,
                data = base_final, family = gaussian(link = "identity"))
summary(main_los)
tableone::ShowRegTable(main_los, exp = FALSE, quote = TRUE)
```

#### Sub-group Analysis (Diabetic) Primary Outcome (Mortality)
```{r}
diabetic_mortality <- glm(mortality_ICU ~ treatment_control + congestive_heart_failure + cardiac_arrhythmias + hypertension + renal_failure,  
                          data = base_diabetes, family = binomial(link='logit'))
summary(diabetic_mortality )
tableone::ShowRegTable(diabetic_mortality, exp = TRUE, quote = TRUE)
```

#### Sub-group Analysis (Diabetic) Secondary Outcome (LOS)
```{r}
diabetic_los <- glm(los ~ treatment_control + congestive_heart_failure + cardiac_arrhythmias + hypertension + renal_failure,
                    data = base_diabetes, family = gaussian(link = "identity"))

summary(diabetic_los)
tableone::ShowRegTable(diabetic_los, exp = FALSE, quote = TRUE)
```

#### Sub-group Analysis (Non-Diabetic) Primary Outcome (Mortality)
```{r}
non_diabetic_mortality <- glm(mortality_ICU ~ treatment_control + age + congestive_heart_failure + cardiac_arrhythmias + obesity,
                              data = base_non_diabetes, family = binomial(link='logit'))

summary(non_diabetic_mortality)
tableone::ShowRegTable(non_diabetic_mortality, exp = TRUE, quote = TRUE)
```

#### Sub-group Analysis (Non-Diabetic) Secondary Outcome (LOS)
```{r}
non_diabetic_los <- glm(los ~ treatment_control + age + congestive_heart_failure + cardiac_arrhythmias + obesity,
                        data = base_non_diabetes, family = gaussian(link = "identity"))
summary(non_diabetic_los)
tableone::ShowRegTable(non_diabetic_los, exp = FALSE, quote = TRUE)
```
